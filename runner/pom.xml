<?xml version="1.0" encoding="UTF-8"?>
<!--
~ Copyright (c) 2019 Contributors to the Eclipse Foundation
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~    http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <parent>
        <groupId>org.eclipse.microprofile.graphql</groupId>
        <artifactId>microprofile-graphql-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../</relativePath>
    </parent>
    
    <artifactId>microprofile-graphql-runner</artifactId>
    <name>MicroProfile GraphQL :: Runner</name>
    <description>Code-first GraphQL APIs for MicroProfile :: Runner</description>
    
    <packaging>war</packaging>
    
    <properties>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <!-- Java version -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        
        <spqr.version>1.0.0-SNAPSHOT</spqr.version>
        <graphql.servlet.version>7.5.0</graphql.servlet.version>
        
        <graphiql.version>0.11.5</graphiql.version>        
    </properties>
    
    <!-- Getting spqr from here until it's released -->
    <scm>
        <connection>scm:git:git://github.com/phillip-kruger/graphql-spqr</connection>
        <developerConnection>scm:git:https://github.com/phillip-kruger/graphql-spqr</developerConnection>
        <url>https://github.com/phillip-kruger/graphql-spqr</url>
        <tag>HEAD</tag>
    </scm>
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.eclipse.microprofile</groupId>
                <artifactId>microprofile</artifactId>
                <version>2.2</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <dependencies>
        <!-- The API -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>microprofile-graphql-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- What we use from MicroProfile -->
        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- What we use from Java EE -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>provided</scope>
        </dependency>

        <!-- The GraphQL Libraries we are wrapping for the implementation -->
        <dependency>
            <groupId>io.leangen.graphql</groupId>
            <artifactId>spqr</artifactId>
            <version>${spqr.version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.graphql-java-kickstart</groupId>
            <artifactId>graphql-java-servlet</artifactId>
            <version>${graphql.servlet.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>javax.servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.websocket</groupId>
                    <artifactId>javax.websocket-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        
    </dependencies>
    
    <build>
        <plugins>
            
            <!-- This will get the app part of the tck so that we can deploy it, ignoring all the test stuff -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>microprofile-graphql-tck</artifactId>
                                    <version>${project.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <excludes>**/tests/,**/dynamic/,**/*Test.class</excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
        </plugins>
        
    </build>
    
    
    <profiles>
        <profile>
            <id>thorntail</id>
            <properties>
                <thorntail.version>2.4.0.Final</thorntail.version>
            </properties>
            
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.thorntail</groupId>
                        <artifactId>thorntail-maven-plugin</artifactId>
                        <version>${thorntail.version}</version>
                        <executions>
                            <execution>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <fractionDetectMode>when_missing</fractionDetectMode>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            
            </build>
        </profile>
        
        
        <profile>
            <id>payara-micro</id>
            
            <properties>
                <payara-micro.maven.version>1.0.5</payara-micro.maven.version>
            </properties>
            
            <build>
                <plugins>
                    <plugin>
                        <groupId>fish.payara.maven.plugins</groupId>
                        <artifactId>payara-micro-maven-plugin</artifactId>
                        <version>${payara-micro.maven.version}</version>
                        <executions>
                            <execution>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <useUberJar>false</useUberJar>
                                    <daemon>false</daemon>
                                    <deployWar>true</deployWar>
                                    <contextRoot>/</contextRoot>
                                    <deployArtifacts>
                                        <artifactItem>
                                            <groupId>${project.groupId}</groupId>
                                            <artifactId>${project.artifactId}</artifactId>
                                            <version>${project.version}</version>
                                            <type>${project.packaging}</type>
                                        </artifactItem>                       
                                    </deployArtifacts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            
        </profile>
    </profiles>
</project>